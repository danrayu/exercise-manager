// Generated by view binder compiler. Do not edit!
package com.example.exercisemanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.exercisemanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogExEditorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnDeleteExercise;

  @NonNull
  public final Button btnExEditorAddMuscle;

  @NonNull
  public final ConstraintLayout clExc;

  @NonNull
  public final EditText etEditEdescription;

  @NonNull
  public final EditText etEditEname;

  @NonNull
  public final RecyclerView rvPickMusclesEdit;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView tvEditEdescription;

  @NonNull
  public final TextView tvEditEname;

  private DialogExEditorBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnDeleteExercise, @NonNull Button btnExEditorAddMuscle,
      @NonNull ConstraintLayout clExc, @NonNull EditText etEditEdescription,
      @NonNull EditText etEditEname, @NonNull RecyclerView rvPickMusclesEdit,
      @NonNull TextView textView2, @NonNull TextView tvEditEdescription,
      @NonNull TextView tvEditEname) {
    this.rootView = rootView;
    this.btnDeleteExercise = btnDeleteExercise;
    this.btnExEditorAddMuscle = btnExEditorAddMuscle;
    this.clExc = clExc;
    this.etEditEdescription = etEditEdescription;
    this.etEditEname = etEditEname;
    this.rvPickMusclesEdit = rvPickMusclesEdit;
    this.textView2 = textView2;
    this.tvEditEdescription = tvEditEdescription;
    this.tvEditEname = tvEditEname;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogExEditorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogExEditorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_ex_editor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogExEditorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_delete_exercise;
      Button btnDeleteExercise = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteExercise == null) {
        break missingId;
      }

      id = R.id.btn_ex_editor_add_muscle;
      Button btnExEditorAddMuscle = ViewBindings.findChildViewById(rootView, id);
      if (btnExEditorAddMuscle == null) {
        break missingId;
      }

      ConstraintLayout clExc = (ConstraintLayout) rootView;

      id = R.id.et_edit_edescription;
      EditText etEditEdescription = ViewBindings.findChildViewById(rootView, id);
      if (etEditEdescription == null) {
        break missingId;
      }

      id = R.id.et_edit_ename;
      EditText etEditEname = ViewBindings.findChildViewById(rootView, id);
      if (etEditEname == null) {
        break missingId;
      }

      id = R.id.rv_pick_muscles_edit;
      RecyclerView rvPickMusclesEdit = ViewBindings.findChildViewById(rootView, id);
      if (rvPickMusclesEdit == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.tv_edit_edescription;
      TextView tvEditEdescription = ViewBindings.findChildViewById(rootView, id);
      if (tvEditEdescription == null) {
        break missingId;
      }

      id = R.id.tv_edit_ename;
      TextView tvEditEname = ViewBindings.findChildViewById(rootView, id);
      if (tvEditEname == null) {
        break missingId;
      }

      return new DialogExEditorBinding((ConstraintLayout) rootView, btnDeleteExercise,
          btnExEditorAddMuscle, clExc, etEditEdescription, etEditEname, rvPickMusclesEdit,
          textView2, tvEditEdescription, tvEditEname);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
