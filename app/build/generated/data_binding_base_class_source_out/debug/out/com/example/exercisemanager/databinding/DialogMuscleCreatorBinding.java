// Generated by view binder compiler. Do not edit!
package com.example.exercisemanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.exercisemanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogMuscleCreatorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout clMuscle;

  @NonNull
  public final TextView createMuscleDialogName;

  @NonNull
  public final EditText etEnterMname;

  @NonNull
  public final TextView tvEnterMname;

  private DialogMuscleCreatorBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout clMuscle, @NonNull TextView createMuscleDialogName,
      @NonNull EditText etEnterMname, @NonNull TextView tvEnterMname) {
    this.rootView = rootView;
    this.clMuscle = clMuscle;
    this.createMuscleDialogName = createMuscleDialogName;
    this.etEnterMname = etEnterMname;
    this.tvEnterMname = tvEnterMname;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogMuscleCreatorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogMuscleCreatorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_muscle_creator, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogMuscleCreatorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout clMuscle = (ConstraintLayout) rootView;

      id = R.id.create_muscle_dialog_name;
      TextView createMuscleDialogName = ViewBindings.findChildViewById(rootView, id);
      if (createMuscleDialogName == null) {
        break missingId;
      }

      id = R.id.et_enter_mname;
      EditText etEnterMname = ViewBindings.findChildViewById(rootView, id);
      if (etEnterMname == null) {
        break missingId;
      }

      id = R.id.tv_enter_mname;
      TextView tvEnterMname = ViewBindings.findChildViewById(rootView, id);
      if (tvEnterMname == null) {
        break missingId;
      }

      return new DialogMuscleCreatorBinding((ConstraintLayout) rootView, clMuscle,
          createMuscleDialogName, etEnterMname, tvEnterMname);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
