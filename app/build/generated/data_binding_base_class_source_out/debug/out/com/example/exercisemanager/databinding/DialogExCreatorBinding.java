// Generated by view binder compiler. Do not edit!
package com.example.exercisemanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.exercisemanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogExCreatorBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnExCreatorAddMuscle;

  @NonNull
  public final ImageButton btnSaveItem;

  @NonNull
  public final ScrollView clExc;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final EditText etEnterEdescription;

  @NonNull
  public final EditText etEnterEname;

  @NonNull
  public final RecyclerView rvPickMuscles;

  @NonNull
  public final TextView tvEnterEdescription;

  @NonNull
  public final TextView tvEnterEname;

  @NonNull
  public final TextView tvPageName;

  private DialogExCreatorBinding(@NonNull ScrollView rootView,
      @NonNull Button btnExCreatorAddMuscle, @NonNull ImageButton btnSaveItem,
      @NonNull ScrollView clExc, @NonNull ConstraintLayout constraintLayout,
      @NonNull EditText etEnterEdescription, @NonNull EditText etEnterEname,
      @NonNull RecyclerView rvPickMuscles, @NonNull TextView tvEnterEdescription,
      @NonNull TextView tvEnterEname, @NonNull TextView tvPageName) {
    this.rootView = rootView;
    this.btnExCreatorAddMuscle = btnExCreatorAddMuscle;
    this.btnSaveItem = btnSaveItem;
    this.clExc = clExc;
    this.constraintLayout = constraintLayout;
    this.etEnterEdescription = etEnterEdescription;
    this.etEnterEname = etEnterEname;
    this.rvPickMuscles = rvPickMuscles;
    this.tvEnterEdescription = tvEnterEdescription;
    this.tvEnterEname = tvEnterEname;
    this.tvPageName = tvPageName;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogExCreatorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogExCreatorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_ex_creator, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogExCreatorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_ex_creator_add_muscle;
      Button btnExCreatorAddMuscle = ViewBindings.findChildViewById(rootView, id);
      if (btnExCreatorAddMuscle == null) {
        break missingId;
      }

      id = R.id.btn_save_item;
      ImageButton btnSaveItem = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveItem == null) {
        break missingId;
      }

      ScrollView clExc = (ScrollView) rootView;

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.et_enter_edescription;
      EditText etEnterEdescription = ViewBindings.findChildViewById(rootView, id);
      if (etEnterEdescription == null) {
        break missingId;
      }

      id = R.id.et_enter_ename;
      EditText etEnterEname = ViewBindings.findChildViewById(rootView, id);
      if (etEnterEname == null) {
        break missingId;
      }

      id = R.id.rv_pick_muscles;
      RecyclerView rvPickMuscles = ViewBindings.findChildViewById(rootView, id);
      if (rvPickMuscles == null) {
        break missingId;
      }

      id = R.id.tv_enter_edescription;
      TextView tvEnterEdescription = ViewBindings.findChildViewById(rootView, id);
      if (tvEnterEdescription == null) {
        break missingId;
      }

      id = R.id.tv_enter_ename;
      TextView tvEnterEname = ViewBindings.findChildViewById(rootView, id);
      if (tvEnterEname == null) {
        break missingId;
      }

      id = R.id.tv_page_name;
      TextView tvPageName = ViewBindings.findChildViewById(rootView, id);
      if (tvPageName == null) {
        break missingId;
      }

      return new DialogExCreatorBinding((ScrollView) rootView, btnExCreatorAddMuscle, btnSaveItem,
          clExc, constraintLayout, etEnterEdescription, etEnterEname, rvPickMuscles,
          tvEnterEdescription, tvEnterEname, tvPageName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
